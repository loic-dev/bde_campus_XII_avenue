version: '3.7'

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: i_api
    restart: always
    container_name: c_api
    command: /app/node_modules/.bin/nodemon index.js
    volumes:
      - ./api/:/app
      - ./api/node_modules:/app/node_modules
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - API_PORT=${API_PORT}
      - NODE_ENV=${NODE_ENV}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      - database
    networks:
     - app-private-network
  database:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - data-volume:/data/db
      - ./database/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - app-private-network
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    image: client_image
    container_name: client_container
    command: npm start
    volumes:
      - ./client/:/app
      - ./client/node_modules:/app/node_modules
    stdin_open: true
    depends_on:
      - api
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"


  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: postgres
    ports:
      - "5050:80"
    networks:
      - app-private-network
    



networks:
    app-private-network:
        driver: bridge

volumes:
    data-volume:
    node_modules:
    web-root:
      driver: local