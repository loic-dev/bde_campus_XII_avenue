version: '3.7'

services:
  
  database:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - data-volume:/data/db
      - ./database/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - app-private-network


  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    image: client_image
    container_name: client_container
    command: npm start
    volumes:
      - ./client/:/app
      - ./client/node_modules:/app/node_modules
    stdin_open: true
    env_file: 
      - .env
    depends_on:
      - api
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"


  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: i_api
    restart: always
    container_name: c_api
    command: /app/node_modules/.bin/nodemon index.js
    volumes:
      - ./api/:/app
      - ./api/node_modules:/app/node_modules
    ports:
      - "${API_PORT}:${API_PORT}"
    env_file: 
      - .env
    environment:
      - WAIT_HOSTS=database:5432
    depends_on:
      - database
    links:
      - database
    networks:
     - app-private-network
    

networks:
    app-private-network:
        driver: bridge

volumes:
    data-volume:
    node_modules:
    web-root:
      driver: local